/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TodoList,
  TodoListInterface,
} from "../../TodolistManagement.sol/TodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "create_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTodos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506119338061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633865881b146100675780635a051ea2146100855780636bbdadff146100a15780638f08bb21146100bd57806398ad7a7f146100d9578063b5c90fd51461010c575b600080fd5b61006f610128565b60405161007c9190610fd4565b60405180910390f35b61009f600480360381019061009a9190611036565b610348565b005b6100bb60048036038101906100b69190611036565b61052e565b005b6100d760048036038101906100d29190611198565b6108b9565b005b6100f360048036038101906100ee9190611281565b610a7c565b6040516101039493929190611329565b60405180910390f35b6101266004803603810190610121919061137c565b610be6565b005b606061013e67d451ef04aab666ea60c01b610d84565b61015267dfd16e507df0743760c01b610d84565b610166674e2d46457828e37b60c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561033f57838290600052602060002090600402016040518060800160405290816000820180546101f790611423565b80601f016020809104026020016040519081016040528092919081815260200182805461022390611423565b80156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b5050505050815260200160018201805461028990611423565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611423565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152602001600382015481525050815260200190600101906101c4565b50505050905090565b61035c678df5d7096186599860c01b610d84565b61037067b944aad868d64c7c60c01b610d84565b610384673303bf73f6a8a97e60c01b610d84565b61039867c3894101d655e95c60c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061041b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610412906114a0565b60405180910390fd5b61042f673dda7a81122e9ff560c01b610d84565b61044367f4e15a74a906a2c460c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610493576104926114c0565b5b906000526020600020906004020160020160009054906101000a900460ff16156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610503576105026114c0565b5b906000526020600020906004020160020160006101000a81548160ff02191690831515021790555050565b61054267c09cd875ba4f2ffe60c01b610d84565b61055667f693978a5738fe4a60c01b610d84565b61056a6783133fc5f073a68360c01b610d84565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506105c467ab132ebf10b113ca60c01b610d84565b6105d8678d04cb7502d8659360c01b610d84565b6105eb662457cb86042b2a60c01b610d84565b80821061062d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610624906114a0565b60405180910390fd5b61064167730bdfad3302dee960c01b610d84565b6106556765ea3577c320e8a160c01b610d84565b61066967f3e760cd23f76b2560c01b610d84565b600181610676919061151e565b82146107d557610690670fc93a4f162ae66760c01b610d84565b6106a4677a0fc0582461feb860c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826106ef919061151e565b81548110610700576106ff6114c0565b5b90600052602060002090600402016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061075e5761075d6114c0565b5b9060005260206000209060040201600082018160000190816107809190611714565b50600182018160010190816107959190611714565b506002820160009054906101000a900460ff168160020160006101000a81548160ff021916908315150217905550600382015481600301559050506107ea565b6107e9671af492c50fd2cb7560c01b610d84565b5b6107fe6766dff81a5b0e717060c01b610d84565b610812675da1aa13428dc80560c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806108605761085f6117fc565b5b6001900381819060005260206000209060040201600080820160006108859190610d87565b6001820160006108959190610d87565b6002820160006101000a81549060ff02191690556003820160009055505090555050565b6108cd6767f020935005e3b760c01b610d84565b6108e167f4d4e30d064ff8a760c01b610d84565b6108f567c74b747977f1378760c01b610d84565b61090967956a73437d4136e360c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050831061098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610983906114a0565b60405180910390fd5b6109a067d0e6f329de4adf3a60c01b610d84565b6109b4675cb07dded6a24fdb60c01b610d84565b6109c86747ac4d46796b4e3760c01b610d84565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610a1a57610a196114c0565b5b90600052602060002090600402019050610a3e67633409b4091b394460c01b610d84565b82816000019081610a4f919061182b565b50610a64676e7bdf580a323c1e60c01b610d84565b81816001019081610a75919061182b565b5050505050565b60006020528160005260406000208181548110610a9857600080fd5b906000526020600020906004020160009150915050806000018054610abc90611423565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae890611423565b8015610b355780601f10610b0a57610100808354040283529160200191610b35565b820191906000526020600020905b815481529060010190602001808311610b1857829003601f168201915b505050505090806001018054610b4a90611423565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7690611423565b8015610bc35780601f10610b9857610100808354040283529160200191610bc3565b820191906000526020600020905b815481529060010190602001808311610ba657829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154905084565b610bfa6719c7f954e8489f8960c01b610d84565b610c0e673ae444e1322df10760c01b610d84565b610c2267e81de722f66019ff60c01b610d84565b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610c72919061151e565b9050610c8867ec19027ef49957ed60c01b610d84565b610c9c6765bb1f507b0bd00a60c01b610d84565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808581526020018481526020016000151581526020018381525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019081610d3c919061182b565b506020820151816001019081610d52919061182b565b5060408201518160020160006101000a81548160ff021916908315150217905550606082015181600301555050505050565b50565b508054610d9390611423565b6000825580601f10610da55750610dc4565b601f016020900490600052602060002090810190610dc39190610dc7565b5b50565b5b80821115610de0576000816000905550600101610dc8565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e4a578082015181840152602081019050610e2f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e7282610e10565b610e7c8185610e1b565b9350610e8c818560208601610e2c565b610e9581610e56565b840191505092915050565b60008115159050919050565b610eb581610ea0565b82525050565b6000819050919050565b610ece81610ebb565b82525050565b60006080830160008301518482036000860152610ef18282610e67565b91505060208301518482036020860152610f0b8282610e67565b9150506040830151610f206040860182610eac565b506060830151610f336060860182610ec5565b508091505092915050565b6000610f4a8383610ed4565b905092915050565b6000602082019050919050565b6000610f6a82610de4565b610f748185610def565b935083602082028501610f8685610e00565b8060005b85811015610fc25784840389528151610fa38582610f3e565b9450610fae83610f52565b925060208a01995050600181019050610f8a565b50829750879550505050505092915050565b60006020820190508181036000830152610fee8184610f5f565b905092915050565b6000604051905090565b600080fd5b600080fd5b61101381610ebb565b811461101e57600080fd5b50565b6000813590506110308161100a565b92915050565b60006020828403121561104c5761104b611000565b5b600061105a84828501611021565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110a582610e56565b810181811067ffffffffffffffff821117156110c4576110c361106d565b5b80604052505050565b60006110d7610ff6565b90506110e3828261109c565b919050565b600067ffffffffffffffff8211156111035761110261106d565b5b61110c82610e56565b9050602081019050919050565b82818337600083830152505050565b600061113b611136846110e8565b6110cd565b90508281526020810184848401111561115757611156611068565b5b611162848285611119565b509392505050565b600082601f83011261117f5761117e611063565b5b813561118f848260208601611128565b91505092915050565b6000806000606084860312156111b1576111b0611000565b5b60006111bf86828701611021565b935050602084013567ffffffffffffffff8111156111e0576111df611005565b5b6111ec8682870161116a565b925050604084013567ffffffffffffffff81111561120d5761120c611005565b5b6112198682870161116a565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061124e82611223565b9050919050565b61125e81611243565b811461126957600080fd5b50565b60008135905061127b81611255565b92915050565b6000806040838503121561129857611297611000565b5b60006112a68582860161126c565b92505060206112b785828601611021565b9150509250929050565b600082825260208201905092915050565b60006112dd82610e10565b6112e781856112c1565b93506112f7818560208601610e2c565b61130081610e56565b840191505092915050565b61131481610ea0565b82525050565b61132381610ebb565b82525050565b6000608082019050818103600083015261134381876112d2565b9050818103602083015261135781866112d2565b9050611366604083018561130b565b611373606083018461131a565b95945050505050565b6000806040838503121561139357611392611000565b5b600083013567ffffffffffffffff8111156113b1576113b0611005565b5b6113bd8582860161116a565b925050602083013567ffffffffffffffff8111156113de576113dd611005565b5b6113ea8582860161116a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061143b57607f821691505b60208210810361144e5761144d6113f4565b5b50919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b600061148a600d836112c1565b915061149582611454565b602082019050919050565b600060208201905081810360008301526114b98161147d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061152982610ebb565b915061153483610ebb565b925082820390508181111561154c5761154b6114ef565b5b92915050565b60008154905061156181611423565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261158d565b6115d4868361158d565b95508019841693508086168417925050509392505050565b6000819050919050565b600061161161160c61160784610ebb565b6115ec565b610ebb565b9050919050565b6000819050919050565b61162b836115f6565b61163f61163782611618565b84845461159a565b825550505050565b600090565b611654611647565b61165f818484611622565b505050565b5b818110156116835761167860008261164c565b600181019050611665565b5050565b601f8211156116c85761169981611568565b6116a28461157d565b810160208510156116b1578190505b6116c56116bd8561157d565b830182611664565b50505b505050565b600082821c905092915050565b60006116eb600019846008026116cd565b1980831691505092915050565b600061170483836116da565b9150826002028217905092915050565b8181036117225750506117fa565b61172b82611552565b67ffffffffffffffff8111156117445761174361106d565b5b61174e8254611423565b611759828285611687565b6000601f8311600181146117885760008415611776578287015490505b61178085826116f8565b8655506117f3565b601f19841661179687611568565b96506117a186611568565b60005b828110156117c9578489015482556001820191506001850194506020810190506117a4565b868310156117e657848901546117e2601f8916826116da565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b61183482610e10565b67ffffffffffffffff81111561184d5761184c61106d565b5b6118578254611423565b611862828285611687565b600060209050601f8311600181146118955760008415611883578287015190505b61188d85826116f8565b8655506118f5565b601f1984166118a386611568565b60005b828110156118cb578489015182556001820191506020850194506020810190506118a6565b868310156118e857848901516118e4601f8916826116da565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d3fe6d7c8e5c775ff547c6b182af94d09d89ba34a4c140c42cd73b4ee542d16d64736f6c634300081e0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
